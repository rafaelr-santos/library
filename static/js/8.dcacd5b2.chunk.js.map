{"version":3,"sources":["components/subjects/MatrizesVetores/articles/TiposMatrizes.js","../node_modules/@material-ui/core/esm/Divider/Divider.js"],"names":["TiposMatrizes","displayMode","Divider","React","props","ref","_props$absolute","absolute","classes","className","_props$component","component","Component","_props$flexItem","flexItem","_props$light","light","_props$orientation","orientation","_props$role","role","undefined","_props$variant","variant","other","_objectWithoutProperties","_extends","clsx","root","vertical","withStyles","theme","height","margin","border","flexShrink","backgroundColor","palette","divider","position","bottom","left","width","inset","marginLeft","fade","middle","spacing","marginRight","alignSelf","name"],"mappings":"oGAAA,0FAIe,SAASA,IAAiB,OAAO,qCAEhD,gDAKA,gDAPgD,sDAOa,cAAC,IAAD,UAAQ,oBAPrB,aAOyD,cAAC,IAAD,UAAQ,cAPjE,IAUhD,uBAAM,uBACN,6CAEA,6BACI,6BACI,cAAC,IAAD,UAAQ,wBAIhB,cAAC,IAAD,IAEA,4CArBgD,2BAqBT,cAAC,IAAD,UAAQ,YArBC,sCAuBhD,cAAC,IAAD,IAEA,6CAzBgD,2BAyBR,cAAC,IAAD,UAAQ,wBAzBA,cAyByC,cAAC,IAAD,UAAQ,qCAzBjD,IA2BhD,cAAC,IAAD,IAEA,0DA7BgD,gDA6B0B,cAAC,IAAD,UAAQ,sEA7BlC,IA+BhD,cAAC,IAAD,IAEA,qDAjCgD,2CAiCgB,cAAC,IAAD,UAAQ,iEAjCxB,IAmChD,uBAAM,uBAEN,0CArCgD,gEAsChD,uBACA,wCAvCgD,iCAuCV,cAAC,IAAD,UAAQ,2FAvCE,oLAuCwP,cAAC,IAAD,UAAQ,0EAvChQ,IAyChD,uBAAM,uBAEN,0CA3CgD,SA2C1B,cAAC,IAAD,UAAQ,6BA3CkB,wBA2CmC,cAAC,IAAD,UAAQ,eA3C3C,sCA4ChD,uBACA,wCA7CgD,iCA6CJ,cAAC,IAAD,UAAQ,eA7CJ,iCA+ChD,cAAC,IAAD,CAAOC,aAAa,EAApB,SAA2B,4BA/CqB,iCAmDrB,cAAC,IAAD,UAAQ,4BAEnC,cAAC,IAAD,CAAOA,aAAa,EAApB,SAA2B,kGArDqB,aA0DzC,cAAC,IAAD,UAAQ,+CA1DiC,cA0DuB,cAAC,IAAD,UAAQ,mD,iCC9D/E,sDAwDIC,EAAuBC,cAAiB,SAAiBC,EAAOC,GAClE,IAAIC,EAAkBF,EAAMG,SACxBA,OAA+B,IAApBD,GAAqCA,EAChDE,EAAUJ,EAAMI,QAChBC,EAAYL,EAAMK,UAClBC,EAAmBN,EAAMO,UACzBC,OAAiC,IAArBF,EAA8B,KAAOA,EACjDG,EAAkBT,EAAMU,SACxBA,OAA+B,IAApBD,GAAqCA,EAChDE,EAAeX,EAAMY,MACrBA,OAAyB,IAAjBD,GAAkCA,EAC1CE,EAAqBb,EAAMc,YAC3BA,OAAqC,IAAvBD,EAAgC,aAAeA,EAC7DE,EAAcf,EAAMgB,KACpBA,OAAuB,IAAhBD,EAAuC,OAAdP,EAAqB,iBAAcS,EAAYF,EAC/EG,EAAiBlB,EAAMmB,QACvBA,OAA6B,IAAnBD,EAA4B,YAAcA,EACpDE,EAAQC,YAAyBrB,EAAO,CAAC,WAAY,UAAW,YAAa,YAAa,WAAY,QAAS,cAAe,OAAQ,YAE1I,OAAoBD,gBAAoBS,EAAWc,YAAS,CAC1DjB,UAAWkB,YAAKnB,EAAQoB,KAAMnB,EAAuB,cAAZc,GAA2Bf,EAAQe,GAAUhB,GAAYC,EAAQD,SAAUO,GAAYN,EAAQM,SAAUE,GAASR,EAAQQ,MAAuB,aAAhBE,GAA8BV,EAAQqB,UAChNT,KAAMA,EACNf,IAAKA,GACJmB,OA+DUM,iBAvIK,SAAgBC,GAClC,MAAO,CAELH,KAAM,CACJI,OAAQ,EACRC,OAAQ,EAERC,OAAQ,OACRC,WAAY,EACZC,gBAAiBL,EAAMM,QAAQC,SAIjC/B,SAAU,CACRgC,SAAU,WACVC,OAAQ,EACRC,KAAM,EACNC,MAAO,QAITC,MAAO,CACLC,WAAY,IAId5B,MAAO,CACLoB,gBAAiBS,YAAKd,EAAMM,QAAQC,QAAS,MAI/CQ,OAAQ,CACNF,WAAYb,EAAMgB,QAAQ,GAC1BC,YAAajB,EAAMgB,QAAQ,IAI7BlB,SAAU,CACRG,OAAQ,OACRU,MAAO,GAIT5B,SAAU,CACRmC,UAAW,UACXjB,OAAQ,WA0FoB,CAChCkB,KAAM,cADOpB,CAEZ5B","file":"static/js/8.dcacd5b2.chunk.js","sourcesContent":["import React from 'react';\r\nimport Latex from 'react-latex';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nexport default function TiposMatrizes(){ return(<>\r\n\r\n<h2>\r\n    Tipos Matrizes\r\n</h2>\r\n\r\n\r\n<b> Simétrica :</b> uma matriz simétrica satisfaz a condição <Latex>{\"$a_{ij}=a_{ji}$\"}</Latex>, ou seja <Latex>{\"$A=A^{T}$\"}</Latex>.\r\n\r\n\r\n<br /><br />\r\n<b>Propriedades</b>\r\n\r\n<ul>\r\n    <li>\r\n        <Latex>{\"$A^TA=AA^T=A^2$\"}</Latex>\r\n    </li>\r\n</ul>\r\n\r\n<Divider />\r\n\r\n<b> Singular :</b> é uma matriz em que <Latex>{\"$|A|=0$\"}</Latex>, ou seja, não existe a inversa.\r\n\r\n<Divider />\r\n\r\n<b> Ortogonal :</b> é uma matriz em que <Latex>{\"${Q}^{T}={Q}^{-1}0$\"}</Latex>, ou seja, <Latex>{\"$Q{Q}^{T}=Q{Q}^{-1}=\\\\mathbf{I}$\"}</Latex>.\r\n\r\n<Divider />\r\n\r\n<b> Positiva Semi-Definida :</b> uma matriz A é positiva semi definida se <Latex>{\"$\\\\vec{x}^{T}A\\\\vec{x}\\\\geq 0, \\\\forall\\\\vec{x}\\\\in\\\\mathbb{R}^n$\"}</Latex>.\r\n\r\n<Divider />\r\n\r\n<b> Positiva Definida :</b> uma matriz A é positiva definida se <Latex>{\"$\\\\vec{x}^{T}A\\\\vec{x}>0, \\\\forall\\\\vec{x}\\\\in\\\\mathbb{R}^n$\"}</Latex>.\r\n\r\n<br /><br />\r\n\r\n<b>Teorema :</b> se A é positiva definida, então A é não singular\r\n<br />\r\n<b>Prova :</b> Se A é singular, então <Latex>{\"$\\\\exists\\\\vec{A}\\\\in\\\\R^n/A\\\\vec{x}=\\\\vec{0}\\\\;\\\\Leftrightarrow\\\\vec{x}^TA\\\\vec{x}=0$\"}</Latex>, portanto A não é positiva definida. Podemos usar a contrapositiva de dessa proposição para provar que se A é não singular então A é positiva definida (<Latex>{\"$p\\\\Rightarrow q\\\\;\\\\Leftrightarrow \\\\tilde{p}\\\\Rightarrow\\\\tilde{q}$\"}</Latex>)\r\n\r\n<br /><br />\r\n\r\n<b>Teorema :</b> Seja <Latex>{\"$M\\\\in\\\\mathbb{R}^{nxn}$\"}</Latex>, não singular, e <Latex>{\"$A=MM^{T}$\"}</Latex>, então A é positiva definida\r\n<br />\r\n<b>Prova :</b> primeiro vamos provar que se <Latex>{\"$A=MM^{T}$\"}</Latex>, então a é simétrica\r\n\r\n<Latex displayMode={true}>{'$$'+\r\n'A^T=(MM^T)^T=MM^T=A'\r\n+'$$'}</Latex>\r\n\r\nAgora, só falta provar que <Latex>{\"$\\\\vec{x}A\\\\vec{x}^T>0$\"}</Latex>\r\n\r\n<Latex displayMode={true}>{'$$'+\r\n'\\\\vec{x}^TA\\\\vec{x}=\\\\vec{x}^T(MM^T)\\\\vec{x}=(M^T\\\\vec{x})^TM^T\\\\vec{x}=||M^T\\\\vec{x}||^2'\r\n+'$$'}</Latex>\r\n\r\n\r\nJá que <Latex>{\"$\\\\vec{x}\\\\mathrel{\\\\char`≠}\\\\vec{0}$\"}</Latex>, então <Latex>{\"$\\\\vec{x}^TA\\\\vec{x}=||M^T\\\\vec{x}||^2>0$\"}</Latex>\r\n\r\n\r\n\r\n</>)}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 1,\n      margin: 0,\n      // Reset browser default style.\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      backgroundColor: fade(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      width: 1\n    },\n\n    /* Styles applied to the root element if `flexItem={true}`. */\n    flexItem: {\n      alignSelf: 'stretch',\n      height: 'auto'\n    }\n  };\n};\nvar Divider = /*#__PURE__*/React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$flexItem = props.flexItem,\n      flexItem = _props$flexItem === void 0 ? false : _props$flexItem,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, orientation === 'vertical' && classes.vertical),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);"],"sourceRoot":""}